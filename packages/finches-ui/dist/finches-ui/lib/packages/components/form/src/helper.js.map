{"version":3,"file":"helper.js","sources":["../../../../../../../../components/form/src/helper.ts"],"sourcesContent":["/*\n * @Description:\n * @Author: 华松林\n * @Date: 2021-08-12 15:01:59\n * @LastEditors: 华松林\n * @LastEditTime: 2021-11-30 17:19:10\n * @FilePath: /finches-ui/packages/components/form/src/helper.ts\n */\nimport { parseInt } from 'lodash-es'\nimport { isArray, isNumber, isString } from '@finches-ui/utils/is'\nimport type { ComponentType } from './types'\n\nconst DATE_TYPE = ['DatePicker', 'TimePicker']\n\nfunction genType() {\n  return [...DATE_TYPE, 'RangePicker']\n}\n\n/**\n * @description: 生成placeholder\n */\nexport function createPlaceholderMessage(component: ComponentType) {\n  if (component.includes('Input') || component.includes('Complete')) {\n    return '请输入'\n  }\n  if (component.includes('Picker')) {\n    return '请选择'\n  }\n  if (\n    component.includes('Select') ||\n    component.includes('Cascader') ||\n    component.includes('Checkbox') ||\n    component.includes('Radio') ||\n    component.includes('Switch')\n  ) {\n    // return `请选择${label}`;\n    return '请选择'\n  }\n  return ''\n}\n\nexport function setComponentRuleType(\n  rule: any,\n  component: ComponentType,\n  valueFormat: string\n) {\n  if (['DatePicker', 'TimePicker'].includes(component)) {\n    rule.type = valueFormat ? 'string' : 'object'\n  } else if (['Upload', 'CheckboxGroup'].includes(component)) {\n    rule.type = 'array'\n  } else if (['InputNumber'].includes(component)) {\n    rule.type = 'number'\n  }\n}\n\n// export function handleInputNumberValue(schema?: any, val?: any) {\n//   const { component, componentProps = {} } = schema\n//   const type = componentProps.type\n//   if (!component) return val\n//   if (['Input'].includes(component) && type !== 'number') {\n//     return val && isNumber(val) ? `${val}` : val || ''\n//   }\n//   if (['InputNumber'].includes(component)) {\n//     return val && isNumber(val) ? val : parseInt(val || 0)\n//   }\n//   return val\n// }\n\nexport function handleFormItemValue(schema?: any, val?: any) {\n  const { component, componentProps = {} } = schema\n  const type = componentProps.type\n  if (!component) return val\n  if (['Input'].includes(component) && type !== 'number') {\n    return val && isNumber(val) ? `${val}` : val || ''\n  }\n  if (['InputNumber', 'Slider', 'Rate'].includes(component)) {\n    return val && isNumber(val) ? val : parseInt(val || 0)\n  }\n  if (['CheckboxGroup', 'Upload'].includes(component)) {\n    return val && isArray(val) ? val : []\n  }\n  if (['TimePicker', 'Editor'].includes(component)) {\n    return val && isString(val) ? val : ''\n  }\n  return val\n}\n\n/**\n * 时间字段\n */\nexport const dateItemType = genType()\n"],"names":["isNumber","parseInt","isArray","isString"],"mappings":";;;;;;;;AAYA,MAAM,YAAY,CAAC,cAAc;AAEjC,mBAAmB;AACjB,SAAO,CAAC,GAAG,WAAW;AAAA;kCAMiB,WAA0B;AACjE,MAAI,UAAU,SAAS,YAAY,UAAU,SAAS,aAAa;AACjE,WAAO;AAAA;AAET,MAAI,UAAU,SAAS,WAAW;AAChC,WAAO;AAAA;AAET,MACE,UAAU,SAAS,aACnB,UAAU,SAAS,eACnB,UAAU,SAAS,eACnB,UAAU,SAAS,YACnB,UAAU,SAAS,WACnB;AAEA,WAAO;AAAA;AAET,SAAO;AAAA;8BAIP,MACA,WACA,aACA;AACA,MAAI,CAAC,cAAc,cAAc,SAAS,YAAY;AACpD,SAAK,OAAO,cAAc,WAAW;AAAA,aAC5B,CAAC,UAAU,iBAAiB,SAAS,YAAY;AAC1D,SAAK,OAAO;AAAA,aACH,CAAC,eAAe,SAAS,YAAY;AAC9C,SAAK,OAAO;AAAA;AAAA;6BAiBoB,QAAc,KAAW;AAC3D,QAAM,EAAE,WAAW,iBAAiB,OAAO;AAC3C,QAAM,OAAO,eAAe;AAC5B,MAAI,CAAC;AAAW,WAAO;AACvB,MAAI,CAAC,SAAS,SAAS,cAAc,SAAS,UAAU;AACtD,WAAO,OAAOA,YAAS,OAAO,GAAG,QAAQ,OAAO;AAAA;AAElD,MAAI,CAAC,eAAe,UAAU,QAAQ,SAAS,YAAY;AACzD,WAAO,OAAOA,YAAS,OAAO,MAAMC,qBAAS,OAAO;AAAA;AAEtD,MAAI,CAAC,iBAAiB,UAAU,SAAS,YAAY;AACnD,WAAO,OAAOC,WAAQ,OAAO,MAAM;AAAA;AAErC,MAAI,CAAC,cAAc,UAAU,SAAS,YAAY;AAChD,WAAO,OAAOC,YAAS,OAAO,MAAM;AAAA;AAEtC,SAAO;AAAA;MAMI,eAAe;;;;;;;"}