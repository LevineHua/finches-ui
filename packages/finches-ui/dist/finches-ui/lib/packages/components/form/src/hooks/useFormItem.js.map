{"version":3,"file":"useFormItem.js","sources":["../../../../../../../../../components/form/src/hooks/useFormItem.ts"],"sourcesContent":["/*\n * @Description:\n * @Author: 华松林\n * @Date: 2021-08-23 15:11:14\n * @LastEditors: 华松林\n * @LastEditTime: 2021-12-01 10:56:12\n * @FilePath: /finches-ui/packages/components/form/src/hooks/useFormItem.ts\n */\nimport {\n  reactive,\n  readonly,\n  computed,\n  getCurrentInstance,\n  watchEffect,\n  unref,\n  nextTick,\n  toRaw,\n} from 'vue'\n\nimport { isEqual } from 'lodash-es'\nimport type { UnwrapRef, Ref } from 'vue'\n\n// eslint-disable-next-line no-undef\nexport function useRuleFormItem(\n  props: any,\n  key: keyof any = 'value',\n  changeEvent = 'change',\n  emitData?: Ref<any[]>\n) {\n  const instance = getCurrentInstance()\n  const emit = instance?.emit\n\n  const innerState = reactive({\n    value: props[key],\n  })\n\n  const defaultState = readonly(innerState)\n\n  const setState = (val: any): void => {\n    innerState.value = val\n  }\n\n  watchEffect(() => {\n    innerState.value = props[key]\n  })\n\n  const state: any = computed({\n    get() {\n      return innerState.value\n    },\n    set(value) {\n      if (isEqual(value, defaultState.value)) return\n\n      innerState.value = value\n      nextTick(() => {\n        emit?.(changeEvent, value, ...(toRaw(unref(emitData)) || []))\n      })\n    },\n  })\n\n  return [state, setState, defaultState]\n}\n"],"names":["getCurrentInstance","reactive","readonly","computed","isEqual","toRaw","unref"],"mappings":";;;;;;;;yBAwBE,OACA,MAAiB,SACjB,cAAc,UACd,UACA;AACA,QAAM,WAAWA;AACjB,QAAM,OAAO,qCAAU;AAEvB,QAAM,aAAaC,aAAS;AAAA,IAC1B,OAAO,MAAM;AAAA;AAGf,QAAM,eAAeC,aAAS;AAE9B,QAAM,WAAW,CAAC,QAAmB;AACnC,eAAW,QAAQ;AAAA;AAGrB,kBAAY,MAAM;AAChB,eAAW,QAAQ,MAAM;AAAA;AAG3B,QAAM,QAAaC,aAAS;AAAA,IAC1B,MAAM;AACJ,aAAO,WAAW;AAAA;AAAA,IAEpB,IAAI,OAAO;AACT,UAAIC,mBAAQ,OAAO,aAAa;AAAQ;AAExC,iBAAW,QAAQ;AACnB,mBAAS,MAAM;AACb,qCAAO,aAAa,OAAO,GAAIC,UAAMC,UAAM,cAAc;AAAA;AAAA;AAAA;AAK/D,SAAO,CAAC,OAAO,UAAU;AAAA;;;;"}