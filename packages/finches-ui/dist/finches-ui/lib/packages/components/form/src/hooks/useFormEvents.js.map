{"version":3,"file":"useFormEvents.js","sources":["../../../../../../../../../components/form/src/hooks/useFormEvents.ts"],"sourcesContent":["/*\n * @Description:\n * @Author: 华松林\n * @Date: 2021-08-13 15:10:13\n * @LastEditors: 华松林\n * @LastEditTime: 2021-12-01 11:22:40\n * @FilePath: /finches-ui/packages/components/form/src/hooks/useFormEvents.ts\n */\n\nimport { nextTick, toRaw, unref } from 'vue'\nimport { dateUtil } from '@finches-ui/utils/dateUtil'\nimport { isFunction } from '@finches-ui/utils/is'\nimport { dateItemType, handleFormItemValue } from '../helper'\nimport type { ComputedRef, Ref } from 'vue'\n\ninterface UseFormActionContext {\n  emit: any\n  getProps: ComputedRef<any>\n  getSchema: ComputedRef<any>\n  formModel: any\n  defaultValueRef: Ref\n  formElRef: Ref\n  handleFormValues: Function\n}\n\nexport function useFormEvents({\n  emit,\n  getProps,\n  formModel,\n  getSchema,\n  defaultValueRef,\n  formElRef,\n  handleFormValues,\n}: UseFormActionContext) {\n  async function resetFields(): Promise<void> {\n    const { resetFunc, submitOnReset } = unref(getProps)\n    resetFunc && isFunction(resetFunc) && (await resetFunc())\n\n    const formEl = unref(formElRef)\n    if (!formEl) return\n\n    Object.keys(formModel).forEach((key) => {\n      formModel[key] = defaultValueRef.value[key]\n    })\n    clearValidate()\n    emit('reset', toRaw(formModel))\n    submitOnReset && handleSubmit()\n  }\n  // set form vlaue\n  async function setFieldsValue(values: any): Promise<void> {\n    const fields = unref(getSchema)\n      .map((item: any) => item.field)\n      .filter(Boolean)\n\n    const validKeys: string[] = []\n    Object.keys(values).forEach((key) => {\n      const schema = unref(getSchema).find((item: any) => item.field === key)\n      let value = values[key]\n\n      const hasKey = Reflect.has(values, key)\n      // console.log(schema)\n\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      if (schema) {\n        value = handleFormItemValue(schema, value)\n      }\n\n      if (hasKey && fields.includes(key)) {\n        if (itemIsDateType(key)) {\n          if (Array.isArray(value)) {\n            const arr: any[] = []\n            for (const ele of value) {\n              arr.push(ele ? dateUtil(ele) : null)\n            }\n            formModel[key] = arr\n          } else {\n            const { componentProps } = schema || {}\n            let _props = componentProps as any\n            if (typeof componentProps === 'function') {\n              _props = _props({ formModel })\n            }\n            formModel[key] = value\n              ? _props?.valueFormat\n                ? value\n                : dateUtil(value)\n              : null\n          }\n        } else {\n          formModel[key] = value\n        }\n        validKeys.push(key)\n      }\n    })\n    validateFields(validKeys).catch((_) => {})\n  }\n\n  // 是否为时间类型\n  function itemIsDateType(key: string) {\n    return unref(getSchema).some((item: any) => {\n      return item.field === key ? dateItemType.includes(item.component) : false\n    })\n  }\n\n  function getFieldsValue() {\n    const formEl = unref(formElRef)\n    if (!formEl) return {}\n    return handleFormValues(unref(formModel))\n  }\n\n  function getAllFieldsValue() {\n    const schemas = unref(getSchema)\n    const fields: any = {}\n\n    schemas.forEach((item: any) => {\n      const { field } = item\n      fields[field] = handleFormItemValue(item, item.defaultValue)\n    })\n    return { ...fields, ...getFieldsValue() }\n  }\n\n  async function validateFields(nameList?: string[] | undefined) {\n    return unref(formElRef)?.validateFields(nameList)\n  }\n\n  async function validate(nameList?: any) {\n    // console.log(unref(formElRef))\n\n    const ref = await unref(formElRef)?.validate(nameList)\n    if (ref) {\n      return getAllFieldsValue()\n    }\n    return false\n  }\n\n  async function clearValidate(name?: string | string[]) {\n    nextTick(async () => {\n      await unref(formElRef)?.clearValidate(name)\n    })\n  }\n\n  // 提交\n  async function handleSubmit(e?: any): Promise<void> {\n    e && e.preventDefault()\n    const { submitFunc } = unref(getProps)\n    if (submitFunc && isFunction(submitFunc)) {\n      await submitFunc()\n      return\n    }\n    const formEl = unref(formElRef)\n    if (!formEl) return\n    try {\n      const values = await validate()\n      const res = handleFormValues(values)\n\n      emit('submit', res)\n    } catch (error: any) {\n      throw new Error(error)\n    }\n  }\n\n  return {\n    setFieldsValue,\n    validateFields,\n    handleSubmit,\n    resetFields,\n    clearValidate,\n    validate,\n    getAllFieldsValue,\n  }\n}\n"],"names":["unref","isFunction","toRaw","handleFormItemValue","dateUtil","dateItemType"],"mappings":"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"}