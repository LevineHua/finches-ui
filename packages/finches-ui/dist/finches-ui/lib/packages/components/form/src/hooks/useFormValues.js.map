{"version":3,"file":"useFormValues.js","sources":["../../../../../../../../../components/form/src/hooks/useFormValues.ts"],"sourcesContent":["/*\n * @Description:\n * @Author: 华松林\n * @Date: 2021-08-13 11:31:30\n * @LastEditors: 华松林\n * @LastEditTime: 2021-11-30 17:17:32\n * @FilePath: /finches-ui/packages/components/form/src/hooks/useFormValues.ts\n */\nimport { unref } from 'vue'\nimport { set } from 'lodash-es'\nimport {\n  isArray,\n  isFunction,\n  isNullOrUnDef,\n  isObject,\n  isString,\n} from '@finches-ui/utils/is'\nimport { dateUtil } from '@finches-ui/utils/dateUtil'\nimport type { Ref, ComputedRef } from 'vue'\n\ninterface useFormValuesContext {\n  defaultValueRef: Ref<any>\n  getSchema: ComputedRef<any>\n  getProps: ComputedRef<any>\n  formModel: any\n  formElRef: any\n}\nexport function useFormValues({\n  defaultValueRef,\n  getSchema,\n  formModel,\n  getProps,\n}: useFormValuesContext) {\n  function handleFormValues(values: any) {\n    if (!isObject(values)) {\n      return {}\n    }\n    const res = {}\n    // Objece.entries 返回对象自身可枚举属性的键值对数组\n    for (const item of Object.entries(values)) {\n      let [, value] = item\n      const [key] = item\n      if (!key || (isArray(value) && value.length === 0) || isFunction(value)) {\n        continue\n      }\n      const transformDateFunc = unref(getProps).transformDateFunc\n      if (isObject(value)) {\n        value = transformDateFunc?.(value)\n      }\n      if (\n        isArray(value) &&\n        value[0]?._isAMomentObject &&\n        value[1]?._isAMomentObject\n      ) {\n        value = value.map((item) => transformDateFunc?.(item))\n      }\n      // Remove spaces\n      if (isString(value)) {\n        value = value.trim()\n      }\n      set(res, key, value)\n    }\n    return handleRangeTimeValue(res)\n  }\n\n  // 处理时间间隔参数\n  function handleRangeTimeValue(values: any) {\n    const fieldMapToTime = unref(getProps).fieldMapToTime\n\n    if (!fieldMapToTime || !Array.isArray(fieldMapToTime)) {\n      return values\n    }\n\n    for (const [\n      field,\n      [startTimeKey, endTimeKey],\n      format = 'YYYY-MM-DD',\n    ] of fieldMapToTime) {\n      if (!field || !startTimeKey || !endTimeKey || !values[field]) {\n        continue\n      }\n\n      const [startTime, endTime]: string[] = values[field]\n\n      values[startTimeKey] = dateUtil(startTime).format(format)\n      values[endTimeKey] = dateUtil(endTime).format(format)\n      Reflect.deleteProperty(values, field)\n    }\n\n    return values\n  }\n\n  function initDefault() {\n    const schemas = unref(getSchema)\n    const obj: any = {}\n    schemas.forEach((item: any) => {\n      const { defaultValue } = item\n      if (!isNullOrUnDef(defaultValue)) {\n        obj[item.field] = defaultValue\n        formModel[item.field] = defaultValue\n      }\n    })\n    defaultValueRef.value = obj\n  }\n\n  return { handleFormValues, initDefault }\n}\n"],"names":["isObject","isArray","isFunction","unref","isString","dateUtil","isNullOrUnDef"],"mappings":";;;;;;;;;;uBA2B8B;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,GACuB;AACvB,4BAA0B,QAAa;AAjCzC;AAkCI,QAAI,CAACA,YAAS,SAAS;AACrB,aAAO;AAAA;AAET,UAAM,MAAM;AAEZ,eAAW,QAAQ,OAAO,QAAQ,SAAS;AACzC,UAAI,GAAG,SAAS;AAChB,YAAM,CAAC,OAAO;AACd,UAAI,CAAC,OAAQC,WAAQ,UAAU,MAAM,WAAW,KAAMC,cAAW,QAAQ;AACvE;AAAA;AAEF,YAAM,oBAAoBC,UAAM,UAAU;AAC1C,UAAIH,YAAS,QAAQ;AACnB,gBAAQ,uDAAoB;AAAA;AAE9B,UACEC,WAAQ,uBACF,OAAN,mBAAU,kCACJ,OAAN,mBAAU,mBACV;AACA,gBAAQ,MAAM,IAAI,CAAC,UAAS,uDAAoB;AAAA;AAGlD,UAAIG,YAAS,QAAQ;AACnB,gBAAQ,MAAM;AAAA;AAEhB,qBAAI,KAAK,KAAK;AAAA;AAEhB,WAAO,qBAAqB;AAAA;AAI9B,gCAA8B,QAAa;AACzC,UAAM,iBAAiBD,UAAM,UAAU;AAEvC,QAAI,CAAC,kBAAkB,CAAC,MAAM,QAAQ,iBAAiB;AACrD,aAAO;AAAA;AAGT,eAAW;AAAA,MACT;AAAA,MACA,CAAC,cAAc;AAAA,MACf,SAAS;AAAA,SACN,gBAAgB;AACnB,UAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,cAAc,CAAC,OAAO,QAAQ;AAC5D;AAAA;AAGF,YAAM,CAAC,WAAW,WAAqB,OAAO;AAE9C,aAAO,gBAAgBE,kBAAS,WAAW,OAAO;AAClD,aAAO,cAAcA,kBAAS,SAAS,OAAO;AAC9C,cAAQ,eAAe,QAAQ;AAAA;AAGjC,WAAO;AAAA;AAGT,yBAAuB;AACrB,UAAM,UAAUF,UAAM;AACtB,UAAM,MAAW;AACjB,YAAQ,QAAQ,CAAC,SAAc;AAC7B,YAAM,EAAE,iBAAiB;AACzB,UAAI,CAACG,iBAAc,eAAe;AAChC,YAAI,KAAK,SAAS;AAClB,kBAAU,KAAK,SAAS;AAAA;AAAA;AAG5B,oBAAgB,QAAQ;AAAA;AAG1B,SAAO,EAAE,kBAAkB;AAAA;;;;"}