{"version":3,"file":"FormItem.vue_vue_type_script_lang.mjs","sources":["../../../../../../../../../components/form/src/components/FormItem.vue"],"sourcesContent":["<!--\n * @Description: \n * @Author: 华松林\n * @Date: 2021-08-12 15:14:22\n * @LastEditors: 华松林\n * @LastEditTime: 2021-12-01 11:29:09\n * @FilePath: /finches-ui/packages/components/form/src/components/FormItem.vue\n-->\n<script lang=\"tsx\">\nimport { computed, defineComponent, toRefs, unref } from 'vue'\nimport { ElCol, ElFormItem } from 'element-plus'\nimport { cloneDeep, upperFirst } from 'lodash-es'\nimport { isArray, isFunction, isBoolean, isNull } from '@finches-ui/utils/is'\nimport { getSlot } from '@finches-ui/utils/helper/tsxHelper.tsx'\nimport { componentMap } from '../componentMap'\n\nimport {\n  handleFormItemValue,\n  createPlaceholderMessage,\n  setComponentRuleType,\n} from '../helper'\nimport { useItemLabWidth } from '../hooks/useLabelWidth'\n\nexport default defineComponent({\n  name: 'BasicFormItem',\n  inheritAttrs: false,\n  props: {\n    schema: {\n      type: Object,\n      default: () => ({}),\n    },\n    formProps: {\n      type: Object,\n      default: () => ({}),\n    },\n    allDefaultValues: {\n      type: Object,\n      default: () => ({}),\n    },\n    formModel: {\n      type: Object,\n      default: () => ({}),\n    },\n    setFormModel: {\n      type: Function,\n      default: null,\n    },\n    formActionType: {\n      type: Object,\n    },\n  },\n  setup(props, { slots }) {\n    const { schema, formProps } = toRefs(props)\n\n    const itemLabelWidthProp = useItemLabWidth(schema, formProps)\n\n    const getValues = computed(() => {\n      const { schema, formModel, allDefaultValues } = props\n      return {\n        field: schema.field,\n        schema,\n        model: formModel,\n        values: {\n          ...formModel,\n          ...allDefaultValues,\n        },\n      }\n    })\n\n    const getComponentsProps = computed(() => {\n      const { schema, formModel } = props\n      const { componentProps = {} } = schema\n      if (!isFunction(componentProps)) {\n        return componentProps\n      }\n      return componentProps({ schema, formModel }) ?? {}\n    })\n\n    function getShow() {\n      const { show, ifShow } = props.schema\n      let isShow = true\n      let isIfShow = true\n      if (isBoolean(show)) {\n        isShow = show\n      }\n      if (isBoolean(ifShow)) {\n        isIfShow = ifShow\n      }\n      if (isFunction(show)) {\n        isShow = show(unref(getValues))\n      }\n      if (isFunction(ifShow)) {\n        isIfShow = ifShow(unref(getValues))\n      }\n      return { isShow, isIfShow }\n    }\n\n    function handleRules() {\n      const {\n        rules: defRules = [],\n        component,\n        rulesMessageJoinLabel,\n        label,\n        dynamicRules,\n        required,\n      } = props.schema\n\n      if (isFunction(dynamicRules)) {\n        return dynamicRules(unref(getValues))\n      }\n\n      let rules = cloneDeep(defRules)\n      const { rulesMessageJoinLabel: globalRulesMessageJoinLabel = '' } =\n        props.formProps\n\n      const joinLabel = Reflect.has(props.schema, 'rulesMessageJoinLabel')\n        ? rulesMessageJoinLabel\n        : globalRulesMessageJoinLabel\n      const defaultMsg = `${createPlaceholderMessage(component)}${\n        joinLabel ? '' : label\n      }`\n\n      function validator(rule, value) {\n        const msg = rule.message || defaultMsg\n        if (value === undefined || isNull(value)) {\n          // 空值\n          return Promise.reject(msg)\n        } else if (Array.isArray(value) && value.length === 0) {\n          // 数组类型\n          return Promise.reject(msg)\n        } else if (typeof value === 'string' && value.trim() === '') {\n          // 空字符串\n          return Promise.reject(msg)\n        } else if (\n          typeof value === 'object' &&\n          Reflect.has(value, 'checked') &&\n          Reflect.has(value, 'halfChecked') &&\n          Array.isArray(value.checked) &&\n          Array.isArray(value.halfChecked) &&\n          value.checked.length === 0 &&\n          value.halfChecked.length === 0\n        ) {\n          // 非关联选择的tree组件\n          return Promise.reject(msg)\n        }\n        return Promise.resolve()\n      }\n\n      const getRequired = isFunction(required)\n        ? required(unref(getValues))\n        : required\n\n      if ((!rules || rules.length === 0) && getRequired) {\n        rules = [{ required: getRequired, validator }]\n      }\n\n      const requiredRuleIndex = rules.findIndex(\n        (rule) =>\n          Reflect.has(rule, 'required') && !Reflect.has(rule, 'validator')\n      )\n\n      if (requiredRuleIndex !== -1) {\n        const rule = rules[requiredRuleIndex]\n        const { isShow } = getShow()\n        if (!isShow) {\n          rule.required = false\n        }\n        if (component) {\n          if (!Reflect.has(rule, 'type')) {\n            rule.type = component === 'InputNumber' ? 'number' : 'string'\n          }\n\n          rule.message = rule.message || defaultMsg\n\n          if (component.includes('Input') || component.includes('Textarea')) {\n            rule.whitespace = true\n          }\n          const valueFormat = unref(getComponentsProps)?.valueFormat\n          setComponentRuleType(rule, component, valueFormat)\n        }\n      }\n      // 最大输入长度规则检查\n      const characterInx = rules.findIndex((val) => val.max)\n      if (characterInx !== -1 && !rules[characterInx].validator) {\n        rules[characterInx].message =\n          rules[characterInx].message ||\n          `字符数应小于${rules[characterInx].max}位`\n      }\n\n      return rules\n    }\n\n    // 在组件表中读取对应组件\n    function renderComponent() {\n      const { component, field, changeEvent = 'change' } = props.schema\n\n      const isCheck = component && ['Checkbox'].includes(component)\n\n      let eventKey = `on${upperFirst(changeEvent)}`\n\n      // 如果是 Input 组件，则将默认事件替换未 onInput 事件\n      if (['Input', 'Slider'].includes(component)) {\n        eventKey = 'onInput'\n      }\n\n      const on = {\n        [eventKey]: (...args) => {\n          const [e] = args\n          if (propsData[eventKey]) {\n            propsData[eventKey](...args)\n          }\n          const target = e ? e.target : null\n          const value = target ? (isCheck ? target.checked : target.value) : e\n          // console.log(field, value)\n          props.setFormModel(field, value)\n        },\n      }\n\n      const Comp = componentMap.get(component)\n      // console.log(Comp)\n      let propsData = {\n        ...unref(getComponentsProps),\n      }\n      if (!['ColorPicker'].includes(component)) {\n        propsData = Object.assign(propsData, { clearable: true })\n      }\n      // propsData.codeField = field\n      // propsData.formValues = unref(getValues)\n\n      // console.log(propsData)\n\n      const bindValue = {\n        [isCheck ? 'checked' : 'model-value']: handleFormItemValue(\n          props.schema,\n          props.formModel[field]\n        ),\n      }\n\n      // console.log(bindValue)\n\n      const compAttr = {\n        ...propsData,\n        ...on,\n        ...bindValue,\n      }\n\n      // 如果组件是 RadioGroup，并且参数中包含 options 属性，则需要生成子组件 Radio\n      if (\n        ['RadioGroup', 'CheckboxGroup', 'Select'].includes(component) &&\n        component &&\n        propsData.options &&\n        isArray(propsData.options)\n      ) {\n        const options = propsData.options\n        const getContent = (component, options) => {\n          return renderGroup(component, options)\n        }\n        return <Comp {...compAttr}>{getContent(component, options)}</Comp>\n      }\n\n      return <Comp {...compAttr}></Comp>\n    }\n\n    // 生成 RadioGroup/CheckboxGroup 的子组件\n    function renderGroup(component, options) {\n      if (component === 'Select') {\n        const CompItem = componentMap.get('Option')\n        return options.map((val) => {\n          return (\n            <CompItem\n              label={val.label}\n              key={val.value}\n              value={val.value}\n            ></CompItem>\n          )\n        })\n      } else {\n        const componentName = component.replace(/w*Group$/, '')\n        const CompItem = componentMap.get(componentName)\n        const CompList = options.map((val) => {\n          return <CompItem label={val.value}>{val.label}</CompItem>\n        })\n        return CompList\n      }\n    }\n\n    // 生成 formItem 组件\n    function renderItem() {\n      const { field, label, itemProps, slot } = props.schema\n      const { labelCol, wrapperCol } = unref(itemLabelWidthProp)\n\n      const getContent = () => {\n        return slot ? getSlot(slots, slot, unref(getValues)) : renderComponent()\n      }\n\n      return (\n        <ElFormItem\n          prop={field}\n          label={label}\n          {...itemProps}\n          {...wrapperCol}\n          labelWidth={labelCol}\n          rules={handleRules()}\n        >\n          <div style=\"display: flex;height: 100%;align-items: center;\">\n            <div style=\"flex: 1\">{getContent()}</div>\n          </div>\n        </ElFormItem>\n      )\n    }\n\n    return () => {\n      const { component, colProps = {} } = props.schema\n      if (!componentMap.has(component)) {\n        return null\n      }\n\n      const { baseColProps = {} } = props.formProps\n      const realColProps = { ...baseColProps, ...colProps }\n      // console.log(props.schema)\n      // const value = unref(getValues)\n      const { isIfShow, isShow } = getShow()\n\n      const getContent = () => {\n        return renderItem()\n      }\n\n      // console.log(getContent())\n\n      return (\n        isIfShow && (\n          <ElCol {...realColProps} v-show={isShow}>\n            {getContent()}\n          </ElCol>\n        )\n      )\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","name","inheritAttrs","props","schema","type","Object","default","formProps","allDefaultValues","formModel","setFormModel","Function","formActionType","setup","slots","toRefs","itemLabelWidthProp","useItemLabWidth","getValues","computed","field","schema2","model","values","getComponentsProps","componentProps","isFunction","show","ifShow","isShow","isIfShow","isBoolean","unref","rules","defRules","component","rulesMessageJoinLabel","label","dynamicRules","required","cloneDeep","globalRulesMessageJoinLabel","joinLabel","Reflect","has","defaultMsg","createPlaceholderMessage","rule","value","msg","message","isNull","Promise","reject","Array","isArray","length","trim","checked","halfChecked","resolve","getRequired","validator","requiredRuleIndex","findIndex","getShow","includes","whitespace","valueFormat","characterInx","val","max","changeEvent","isCheck","eventKey","upperFirst","on","args","e","propsData","target","Comp","componentMap","get","assign","clearable","bindValue","handleFormItemValue","compAttr","options","getContent","component2","options2","renderGroup","CompItem","map","key","componentName","replace","CompList","itemProps","slot","labelCol","wrapperCol","getSlot","renderComponent","ElFormItem","prop","labelWidth","handleRules","style","colProps","baseColProps","realColProps","renderItem","ElCol"],"mappings":"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"}